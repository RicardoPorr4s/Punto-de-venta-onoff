/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import ControlProveedores.IProveedoresDAO;
import ControlProveedores.Proveedor;
import ControlProveedores.ProveedorDAOProxy;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Controlador.Conexion;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import ControlProveedores.ProveedorDatos;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author nfswo
 */
public class VentanaProveedor extends javax.swing.JFrame {

    public PreparedStatement ps, ps1;
    public ResultSet rs;
    public DefaultTableModel dft;
    int contador;
    int resultado;
    boolean seCumple;
    private Proveedor proveedorSeleccionado;
    Proveedor prov = new Proveedor();
    ArrayList<Object[]> aprov;
    DefaultTableModel pmodelo = new DefaultTableModel();
    private ArrayList<Proveedor> listap = new ArrayList();

    //proxy del proveedor
    private IProveedoresDAO proxy;
    private ArrayList<String> proveedoresElimados = new ArrayList<>();
    DefaultTableModel modelo;
    

    /**
     * Creates new form VentanaProveedor
     */
    public VentanaProveedor() {
        initComponents();
        this.setLocation(270, 165);
        //this.setAlwaysOnTop(true);
        this.setResizable(false);
        //proveedores
        proxy = new ProveedorDAOProxy();
        listaProveedores();
        modelo=(DefaultTableModel) tablaProveedores.getModel();
        modelo.setColumnIdentifiers(new Object[]
        {
            "Id", "Nombre", "Direccion", "Numero de telefono", "E-mail"
        });

    }

    public void listaProveedores() {
        listap = new ArrayList<Proveedor>();
        listap = (ArrayList) proxy.listaProveedor();
        pmodelo = (DefaultTableModel) tablaProveedores.getModel();
        pmodelo.setRowCount(0);
        Object[] ob = new Object[5];
        for (int i = 0; i < listap.size(); i++) {
            ob[0] = listap.get(i).getId();
            ob[1] = listap.get(i).getNombre();
            ob[2] = listap.get(i).getDireccion();
            ob[3] = listap.get(i).getTelefono();
            ob[4] = listap.get(i).getCorreo();
            pmodelo.addRow(ob);
        }
        tablaProveedores.setModel(pmodelo);
    }

    private void limpiar() {
        cId.setText("");
        cNombre.setText("");
        cDireccion.setText("");
        cTelefono.setText("");
        cCorreo.setText("");
        buscador.setSelectedItem(null);
        cBuscar.setText("");
        tablaProveedores.setRowSelectionAllowed(false);
        botonRegistrar.setEnabled(true);

    }

    public void modificar() {
        int fila = tablaProveedores.getSelectedRow();

        if (fila >= 0) {
            cId.setText(tablaProveedores.getValueAt(fila, 0).toString());
            cNombre.setText(tablaProveedores.getValueAt(fila, 1).toString());
            cDireccion.setText(tablaProveedores.getValueAt(fila, 2).toString());
            cTelefono.setText(tablaProveedores.getValueAt(fila, 3).toString());
            cCorreo.setText(tablaProveedores.getValueAt(fila, 4).toString());
        } else {
            JOptionPane.showMessageDialog(null, "Fila no seleccionada");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();
        bEliminar = new javax.swing.JButton();
        botonRegistrar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cCorreo = new javax.swing.JTextField();
        cNombre = new javax.swing.JTextField();
        cDireccion = new javax.swing.JTextField();
        cTelefono = new javax.swing.JTextField();
        bLimpiar = new javax.swing.JButton();
        cId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bBuscar = new javax.swing.JButton();
        buscador = new javax.swing.JComboBox<>();
        cBuscar = new javax.swing.JTextField();
        btnactualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        botonSalir.setBackground(new java.awt.Color(51, 51, 51));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setToolTipText("");

        tablaProveedores.setBackground(new java.awt.Color(153, 153, 153));
        tablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "ttile3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProveedores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaProveedores.setAutoscrolls(false);
        tablaProveedores.setSelectionBackground(new java.awt.Color(102, 102, 102));
        tablaProveedores.setSurrendersFocusOnKeystroke(true);
        tablaProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProveedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProveedores);

        bEliminar.setBackground(new java.awt.Color(51, 51, 51));
        bEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bEliminar.setForeground(new java.awt.Color(255, 255, 255));
        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        botonRegistrar.setBackground(new java.awt.Color(51, 51, 51));
        botonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText("Registrar");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        bActualizar.setBackground(new java.awt.Color(51, 51, 51));
        bActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bActualizar.setForeground(new java.awt.Color(255, 255, 255));
        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/panaderoVentana.png"))); // NOI18N
        jLabel1.setText("Registrar Proveedor");

        jLabel2.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel2.setText("Dirección:");

        jLabel3.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel3.setText("Id:");

        jLabel4.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel4.setText("Número de telefono:");

        jLabel5.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel5.setText("Correo:");

        cCorreo.setEditable(true);
        cCorreo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cCorreo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCorreoActionPerformed(evt);
            }
        });
        cCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cCorreoKeyTyped(evt);
            }
        });

        cNombre.setEditable(true);
        cNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cDireccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cDireccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cTelefono.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cTelefono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cTelefonoActionPerformed(evt);
            }
        });
        cTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cTelefonoKeyTyped(evt);
            }
        });

        bLimpiar.setBackground(new java.awt.Color(51, 51, 51));
        bLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        cId.setEditable(true);
        cId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel6.setText("Nombre:");

        bBuscar.setBackground(new java.awt.Color(51, 51, 51));
        bBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bBuscar.setForeground(new java.awt.Color(255, 255, 255));
        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        buscador.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        buscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id" }));
        buscador.setSelectedItem(null);

        cBuscar.setEditable(true);
        cBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBuscarActionPerformed(evt);
            }
        });

        btnactualizar.setText("Refrescar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(cId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cTelefono)
                                    .addComponent(cDireccion)
                                    .addComponent(cNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                                    .addComponent(cCorreo, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bActualizar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnactualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(124, 124, 124))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(285, 285, 285)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonSalir)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(cDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bBuscar)
                            .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btnactualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))))
        );

        cId.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1123, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        if(cId.getText().trim().isEmpty() || cNombre.getText().trim().isEmpty() || cTelefono.getText().trim().isEmpty()
                || cDireccion.getText().trim().isEmpty() || cCorreo.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Rellene los o el campo faltante", "Error",JOptionPane.WARNING_MESSAGE);
            
        }else{
            //DefaultTableModel modelo = (DefaultTableModel) tablaProveedores.getModel();
        int fila = tablaProveedores.getSelectedRow();
        try {
            if (fila < 0) {
                JOptionPane.showMessageDialog(null, "Seleccione un proveedor");
            } else {
                proveedoresElimados.add(cId.getText());
                proxy.eliminaProv();
                modelo.removeRow(fila);
                modelo.fireTableDataChanged();
                limpiar();
            }
        } catch (Exception e) {
            Logger.getLogger(VentanaProveedor.class.getName()).log(Level.SEVERE, null, e);
        }
        }
        
        /*  DefaultTableModel modelo = (DefaultTableModel) tablaProveedores.getModel();
        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {

            int vcve = Integer.parseInt(cId.getText());
            //data.remove(vcve);

            int fila = tablaProveedores.getSelectedRow();
            try {
                if (fila < 0) {
                    JOptionPane.showMessageDialog(null, "Seleccione una entidad");
                } else {
                    //proxy.eliminaProv(vcve);
                    deletedRecords.add(cId.getText());

        //service.deleteRecord();
                    proxy.eliminaProv(Integer.parseInt(cId.getText()));
                    listap.remove(fila);
                    modelo.removeRow(fila);
                    modelo.fireTableDataChanged();
                    JOptionPane.showMessageDialog(null, "Entidad eliminada");
                    limpiar();
                }
            } catch (Exception e) {
                Logger.getLogger(VentanaProveedor.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {

        }*/
    }//GEN-LAST:event_bEliminarActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        if(cNombre.getText().trim().isEmpty() || cTelefono.getText().trim().isEmpty()
                || cDireccion.getText().trim().isEmpty() || cCorreo.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Rellene los o el campo faltante", "Error",JOptionPane.WARNING_MESSAGE);
            
        }else{
        if (verificamail(cCorreo.getText())) {
            if (verificanum(cTelefono.getText())) {
                prov.setNombre(cNombre.getText());
                prov.setDireccion(cDireccion.getText());
                prov.setTelefono(cTelefono.getText());
                prov.setCorreo(cCorreo.getText());
                proxy.regitrarProveedor(prov);
                JOptionPane.showMessageDialog(null, "Datos ingresados correctamente");
                limpiar();
                listaProveedores();

            } else {
                JOptionPane.showMessageDialog(this, "Ingresé un numero valido", "Error", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Ingresé un correo valido", "Error", JOptionPane.WARNING_MESSAGE);
        }
        tablaProveedores.setRowSelectionAllowed(false);
        botonRegistrar.setEnabled(true);
        }

    }//GEN-LAST:event_botonRegistrarActionPerformed
    public boolean verificamail(String correo) {
        Pattern patron = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher mat = patron.matcher(correo);
        return mat.find();
    }

    public boolean verificanum(String num) {
        Pattern patron = Pattern.compile("\\d{1,10}(?!\\d)");
        Matcher mat = patron.matcher(num);
        return mat.find();
    }

    public void limpiarTable() {
        for (int i = 0; i < pmodelo.getRowCount(); i++) {
            pmodelo.removeRow(i);
            i = i - 1;
        }
    }

    public void limpiarProveedores() {
        cId.setText("");
        cNombre.setText("");
        cTelefono.setText("");
        cCorreo.setText("");
        cDireccion.setText("");
    }
    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tablaProveedores.getModel();

        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            if (verificamail(cCorreo.getText())) {
                if (verificanum(cTelefono.getText())) {
                    prov.setId(Integer.parseInt(cId.getText()));
                    prov.setNombre(cNombre.getText());
                    prov.setDireccion(cDireccion.getText());
                    prov.setTelefono(cTelefono.getText());
                    prov.setCorreo(cCorreo.getText());
                    boolean actualizacionExitosa = proxy.actualizarProveedor(prov);

                    if (actualizacionExitosa) {
                        listaProveedores();

                        JOptionPane.showMessageDialog(null, "Datos actualizados correctamente");
                        limpiar();
                        tablaProveedores.setRowSelectionAllowed(false);
                        botonRegistrar.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al actualizar en la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ingresé un numero valido", "Error", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingresé un correo valido", "Error", JOptionPane.WARNING_MESSAGE);
            }

        } else {
        }


    }//GEN-LAST:event_bActualizarActionPerformed

    private void validateEmail() {
        String email = cCorreo.getText().trim();

        // Patrón para validar el formato del correo electrónico
        String emailPattern = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";

        Pattern pattern = Pattern.compile(emailPattern);
        Matcher matcher = pattern.matcher(email);

        if (matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Correo electrónico inválido");
        } else {
            JOptionPane.showMessageDialog(this, "Correo electrónico inválido");
            cCorreo.requestFocus();
        }
    }

    private void cCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCorreoActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void cTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cTelefonoActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
     String donde = buscador.getSelectedItem().toString();

switch (donde) {
    case "id":
        try {
            String idText = cBuscar.getText().trim();

            if (!idText.isEmpty()) {
                int id = Integer.parseInt(idText);
                List<Proveedor> resultados = proxy.buscador(donde, new Proveedor(id));
                modelo.setRowCount(0);
                for (Proveedor proveedor : resultados) {
                    modelo.addRow(new Object[] {
                        proveedor.getId(), proveedor.getNombre(), proveedor.getDireccion(),
                        proveedor.getTelefono(), proveedor.getCorreo()
                    });
                }
                tablaProveedores.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(null, "El campo de búsqueda no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un valor numérico válido para el ID.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        break;
       


           
}

    }//GEN-LAST:event_bBuscarActionPerformed

    private void cBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBuscarActionPerformed

    private void cTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cTelefonoKeyTyped
        // TODO add your handling code here:
        char char1 = evt.getKeyChar();
        if (!Character.isDigit(char1) || cTelefono.getText().trim().length() == 10) {
            evt.consume();
        }
        int key = evt.getKeyChar();
    }//GEN-LAST:event_cTelefonoKeyTyped

    private void cCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cCorreoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cCorreoKeyTyped

    private void tablaProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProveedoresMouseClicked
        // TODO add your handling code here:
        modificar();
    }//GEN-LAST:event_tablaProveedoresMouseClicked

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        // TODO add your handling code here:
        proxy.refrescarDatos(proveedoresElimados);
        listaProveedores();
        // limpiarEntidades();
    }//GEN-LAST:event_btnactualizarActionPerformed
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaProveedor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton btnactualizar;
    private javax.swing.JComboBox<String> buscador;
    private javax.swing.JTextField cBuscar;
    private javax.swing.JTextField cCorreo;
    private javax.swing.JTextField cDireccion;
    private javax.swing.JTextField cId;
    private javax.swing.JTextField cNombre;
    private javax.swing.JTextField cTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProveedores;
    // End of variables declaration//GEN-END:variables

}
