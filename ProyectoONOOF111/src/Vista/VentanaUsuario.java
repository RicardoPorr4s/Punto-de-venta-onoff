package Vista;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Controlador.Conexion;
import java.awt.event.KeyEvent;

/**
 *
 * @author felip
 */
public class VentanaUsuario extends javax.swing.JFrame {

    /**
     * Creates new form ventana1
     */
    public PreparedStatement ps, ps1;
    public ResultSet rs;
    public DefaultTableModel dft;
    int resultado;

    public VentanaUsuario() {
        initComponents();
        this.setLocation(255, 149);
        //this.setAlwaysOnTop(true);
        mostrarTablaE();
        mostrarTablaU();
        seleccionarTablaE();
        seleccionarTablaU();
    }

    public void mostrarTablaE() {
        DefaultTableModel modelo = new DefaultTableModel();
        rs = Conexion.getTabla("SELECT * FROM onoof.empleados t1\n" +
" WHERE NOT EXISTS (SELECT NULL\n" +
"					FROM  usuario t2\n" +
"                    WHERE t2.rfcUsuario = t1.RFC)");
        //se asignan los nombre de la columna
        modelo.setColumnIdentifiers(new Object[]
        {
            "RFC", "Nombre", "A. Paterno", "A. Materno", "Dirección", "Correo"
        });

        try
        {
            while (rs.next())
            {
                modelo.addRow(new Object[]
                {
                    rs.getString("RFC"), rs.getString("nombre"), rs.getString("apellido_paterno"), rs.getString("apellido_materno"), rs.getString("direccion"), rs.getString("correo_electronico")
                });

            }
            tEmpleado.setModel(modelo);
        } catch (Exception e)
        {
            //JOptionPane.showMessageDialog(null, e);
        }
        //seleccionarTabla();
    }
    
    
    private void mostrarTablaU() {
        DefaultTableModel modelo = new DefaultTableModel();
        rs = Conexion.getTabla("SELECT * FROM usuario");
        //se asignan los nombre de la columna
        modelo.setColumnIdentifiers(new Object[]
        {
            "Usuario", "Contraseña", "Rol", "RFC"
        });

        try
        {
            while (rs.next())
            {
                modelo.addRow(new Object[]
                {
                    rs.getString("cusuario"), rs.getString("contrasena"), rs.getString("tipo_usuario"),rs.getString("rfcUsuario")
                });

            }
            tUsuario.setModel(modelo);
        } catch (Exception e)
        {
            //JOptionPane.showMessageDialog(null, e);
        }
        //seleccionarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tUsuario = new javax.swing.JTable();
        bEliminar = new javax.swing.JButton();
        botonRegistrar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cNombre = new javax.swing.JTextField();
        cRContraseña = new javax.swing.JTextField();
        bLimpiar = new javax.swing.JButton();
        cContraseña = new javax.swing.JTextField();
        cRFC = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        comboRol = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tEmpleado = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        botonSalir.setBackground(new java.awt.Color(51, 51, 51));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setToolTipText("");

        tUsuario.setBackground(new java.awt.Color(153, 153, 153));
        tUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tUsuario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tUsuario.setAutoscrolls(false);
        tUsuario.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(tUsuario);

        bEliminar.setBackground(new java.awt.Color(51, 51, 51));
        bEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bEliminar.setForeground(new java.awt.Color(255, 255, 255));
        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        botonRegistrar.setBackground(new java.awt.Color(51, 51, 51));
        botonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText(" Registrar usuario");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        bActualizar.setBackground(new java.awt.Color(51, 51, 51));
        bActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bActualizar.setForeground(new java.awt.Color(255, 255, 255));
        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/empleados.png"))); // NOI18N
        jLabel1.setText("Usuarios");

        jLabel3.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel3.setText("Nombre de usuario:");

        jLabel5.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel5.setText("RFC:");

        jLabel6.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel6.setText("Rol");

        jLabel8.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel8.setText("Repetir contraseña");

        cNombre.setEditable(true);
        cNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNombreActionPerformed(evt);
            }
        });

        cRContraseña.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cRContraseña.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bLimpiar.setBackground(new java.awt.Color(51, 51, 51));
        bLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        cContraseña.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cContraseña.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cRFC.setEditable(false);
        cRFC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cRFC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cRFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cRFCKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Sitka Banner", 1, 20)); // NOI18N
        jLabel7.setText("Contraseña");

        comboRol.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Empleado" }));
        comboRol.setSelectedItem(null);
        comboRol.setBorder(null);

        jLabel4.setFont(new java.awt.Font("Californian FB", 1, 16)); // NOI18N
        jLabel4.setText("Empleados que no tienen asignado un usuario");

        jScrollPane2.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setToolTipText("");

        tEmpleado.setBackground(new java.awt.Color(153, 153, 153));
        tEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tEmpleado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tEmpleado.setAutoscrolls(false);
        tEmpleado.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(tEmpleado);

        jLabel9.setFont(new java.awt.Font("Californian FB", 1, 16)); // NOI18N
        jLabel9.setText("Usuarios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboRol, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cRContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botonRegistrar)
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel4)
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(360, 360, 360)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(254, 254, 254))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(23, 23, 23)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cRContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboRol, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
       
        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION)
        {
            try
            {
                Connection conexion = Conexion.getConexion();
                ps = conexion.prepareStatement("delete from usuario where cusuario=?");
                ps.setString(1, cNombre.getText());
                int resultado = ps.executeUpdate();
                if (resultado > 0)
                {
                    JOptionPane.showMessageDialog(null, "Eliminacion correcta");
                    mostrarTablaE();
                } else
                {
                    JOptionPane.showMessageDialog(null, "No se realizo la eliminación de los datos");
                }
                conexion.close();
            } catch (Exception e)
            {
                System.err.println(e);
            }
            limpiar();
            mostrarTablaU();
            mostrarTablaE();
            tUsuario.setRowSelectionAllowed(false);
            botonRegistrar.setEnabled(true);

        } else
        {
            System.out.println("El usuario seleccionó 'No'.");
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        // TODO add your handling code here:

        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION)
        {
            Connection conexion = null;
            int resultado = 0;
            boolean yaRegistrado;
            try
            {
                conexion = Conexion.getConexion();
                ps = conexion.prepareStatement("insert into usuario(cusuario,contrasena,rcontrasena,tipo_usuario,rfcUsuario)values(?,?,?,?,?)");
                ps.setString(1, cNombre.getText());
                ps.setString(2, cContraseña.getText());
                ps.setString(3, cRContraseña.getText());
                String rol = (String) comboRol.getSelectedItem();
                ps.setString(4, rol);
                ps.setString(5, cRFC.getText());
                

                if(cRFC.getText().equals("") || cNombre.getText().equals("") ||cContraseña.getText().equals("") 
                        ||cRContraseña.getText().equals("") ||  comboRol.getSelectedIndex()==-1){
                    JOptionPane.showMessageDialog(null, "Rellene todos los campos "); 
                }else if(cContraseña.getText().equals(cRContraseña.getText())){    
                        resultado = ps.executeUpdate(); 
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Verifique que las contraseñas sean iguales"); }
                if ((resultado > 0))
                {
                    JOptionPane.showMessageDialog(null, "Datos ingresados correctamente");
                    limpiar();
                    mostrarTablaE();
                    mostrarTablaU();
                } 
                conexion.close();

            } catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Verifique los datos");
            }
            mostrarTablaU();
            mostrarTablaE();
            tUsuario.setRowSelectionAllowed(false);
            botonRegistrar.setEnabled(true);}
    }//GEN-LAST:event_botonRegistrarActionPerformed
    private void limpiar() {
        cNombre.setText("");
        cRFC.setText("");
        cContraseña.setText("");
        cRContraseña.setText("");
        tUsuario.setRowSelectionAllowed(false);
        botonRegistrar.setEnabled(true);

    }


    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        // TODO add your handling code here:

        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION)
        {
            resultado = 0;
            try
            {
                Connection conexion = Conexion.getConexion();
                ps = conexion.prepareStatement("update usuario set contrasena=?,rcontrasena=?,tipo_usuario=?,rfcUsuario=? where cusuario=?");
                ps.setString(1, cContraseña.getText());
                ps.setString(2, cRContraseña.getText());
                String rol = (String) comboRol.getSelectedItem();
                ps.setString(3, rol);
                ps.setString(4, cRFC.getText());
                ps.setString(5, cNombre.getText());
                
                if(cRFC.getText().equals("") || cNombre.getText().equals("") || cContraseña.getText().equals("") 
                        || cRContraseña.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Rellene todos los campos "); 
                } else if (cContraseña.getText().equals(cRContraseña.getText())){    
                        resultado = ps.executeUpdate(); 
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Verifique que las contraseñas sean iguales"); }
                if ((resultado > 0))
                {
                    JOptionPane.showMessageDialog(null, "Datos ingresados correctamente");
                    limpiar();
                    mostrarTablaE();
                    mostrarTablaU();
                } 
                conexion.close();
            } catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Verifique los datos");
            }
            mostrarTablaU();
            mostrarTablaE();
            limpiar();
            tUsuario.setRowSelectionAllowed(false);
            botonRegistrar.setEnabled(true);

        } else
        {

        }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void cNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNombreActionPerformed

    private void cRFCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cRFCKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (cRFC.getText().trim().length() == 13) {
            evt.consume();
        }
        if (!Character.isLetterOrDigit(c) && c != KeyEvent.VK_BACK_SPACE)
        {
            evt.consume();
        }
    }//GEN-LAST:event_cRFCKeyTyped
    private void seleccionarTablaE() {
        tEmpleado.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                tUsuario.clearSelection();
                limpiar();
                int row = tEmpleado.rowAtPoint(e.getPoint());

                cRFC.setText(tEmpleado.getValueAt(row, 0).toString());

                bActualizar.setEnabled(false);
                bEliminar.setEnabled(false);
                
                cNombre.setEditable(true);

            }
        });

    }
    
    private void seleccionarTablaU() {
        tUsuario.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                tEmpleado.clearSelection();
                limpiar();
                int row = tUsuario.rowAtPoint(e.getPoint());
                
                cNombre.setText(tUsuario.getValueAt(row, 0).toString());
                cContraseña.setText(tUsuario.getValueAt(row, 1).toString());
                cRContraseña.setText(tUsuario.getValueAt(row, 1).toString());
                comboRol.setSelectedItem(tUsuario.getValueAt(row, 2).toString());
                cRFC.setText(tUsuario.getValueAt(row, 3).toString());
                
                cNombre.setEditable(false);

                botonRegistrar.setEnabled(false);
                bActualizar.setEnabled(true);
                bEliminar.setEnabled(true);

            }
        });

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JTextField cContraseña;
    private javax.swing.JTextField cNombre;
    private javax.swing.JTextField cRContraseña;
    private javax.swing.JTextField cRFC;
    private javax.swing.JComboBox<String> comboRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tEmpleado;
    private javax.swing.JTable tUsuario;
    // End of variables declaration//GEN-END:variables
}
